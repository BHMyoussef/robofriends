{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scrole.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scrole","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACtB,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACC,6BAAKC,IACL,4BAAIC,WCYOI,EAjBA,SAAC,GAAc,IAAZC,EAAW,EAAXA,OAEjB,OACC,8BAEEA,EAAOC,KAAI,SAASC,EAAKC,GACzB,OAAO,cAAC,EAAD,CAEJV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCMGC,EAdE,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAClB,OACC,qBAAKT,UAAU,KAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,G,MARF,SAACC,GACb,OACC,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACEJ,EAAMK,aCwCKC,E,kDArCd,aAAc,IAAD,8BACZ,gBAYDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKC,MAAO,CACXvB,OAAO,GACPoB,YAAc,IAJH,E,qDAOb,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAOpC,WAAS,IAAD,OACDC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC/C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEjE,OAAIH,KAAKP,MAAMvB,OAAOmC,OAIpB,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ6B,SAPd,6C,GAvBQO,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACD,cAAC,EAAD,IAENC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a9ac945f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id,name,email})=>{\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n\t\t\t<img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js'; \r\n\r\nconst CardList=({ robots })=>{\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map(function(user,i){\r\n\t\t\t\treturn <Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchChange})=>{\r\n\treturn(\r\n\t\t<div className='pa'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t\t/>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scrole=(props)=>{\r\n\treturn(\r\n\t\t<div style={{overflowY:'scroll',border:'.5px solid #000',height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\t\t\t\r\n}\r\nexport default Scrole;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css';\r\nimport Scrole from '../components/Scrole';\r\n\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state= {\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield : ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(users=>this.setState({robots:users}));\r\n\t}\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t\t\r\n\t}\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t});\r\n\t\tif(!this.state.robots.length){\r\n\t\t\treturn <h1>loadind</h1>\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className=\"f1\">RobotFreinds</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scrole>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</Scrole>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n        <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}